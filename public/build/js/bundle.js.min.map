{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","addEventListener","terminoBusqueda","forEach","dia","busqueda","categoria_id","value","e","target","name","horaPrevia","classList","remove","Object","values","includes","buscarEventos","async","url","resultado","fetch","eventos","listadoHoras","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","seleccionarHora","obtenerHorasDisponibles","json","id","horaSeleccionada","onclick","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","formatearPonentes","arrayPonentes","ponente","nombre","trim","apellido","seleccionarPonente","ponentePrevio","ponenteId","obtenerPonentes","length","expresion","RegExp","normalize","replace","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","appendChild","noResultados","mostrarPonentes","respuesta","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CAEA,MAAAC,EAAAF,SAAAC,cAAA,yBACAE,EAAAH,SAAAI,iBAAA,gBACAC,EAAAL,SAAAC,cAAA,mBACAK,EAAAN,SAAAC,cAAA,oBAEAC,EAAAK,iBAAA,SAAAC,GACAL,EAAAM,QAAAC,IAAAA,EAAAH,iBAAA,SAAAC,KAEA,IAAAG,EAAA,CACAC,cAAAV,EAAAW,OAAA,GACAH,KAAAL,EAAAQ,OAAA,IAuBA,SAAAL,EAAAM,GACAH,EAAAG,EAAAC,OAAAC,MAAAF,EAAAC,OAAAF,MAGAP,EAAAO,MAAA,GACAR,EAAAQ,MAAA,GACA,MAAAI,EAAAjB,SAAAC,cAAA,8BAEAgB,GACAA,EAAAC,UAAAC,OAAA,6BAGAC,OAAAC,OAAAV,GAAAW,SAAA,KAIAC,IAGAC,eAAAD,IAGA,MAAAb,IAAAA,EAAAE,aAAAA,GAAAD,EACAc,EAAA,+BAAAf,kBAAAE,IAEAc,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAA7B,SAAAI,iBAAA,aACAyB,EAAApB,QAAAqB,IAAAA,EAAAZ,UAAAa,IAAA,iCAGA,MAAAC,EAAAJ,EAAAK,IAAAC,GAAAA,EAAAC,SACAC,EAAAC,MAAAC,KAAAT,GAEAO,EAAAG,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SACAhC,QAAAqB,IAAAA,EAAAZ,UAAAC,OAAA,iCAEAnB,SAAAI,iBAAA,6CACAK,QAAAiC,IACAA,EAAAnC,iBAAA,QAAAoC,KAjBAC,OAFAlB,EAAAmB,QAuBA,SAAAF,EAAA7B,GAEA,MAAAG,EAAAjB,SAAAC,cAAA,8BAEAgB,GACAA,EAAAC,UAAAC,OAAA,6BAGAL,EAAAC,OAAAG,UAAAa,IAAA,6BAEAzB,EAAAO,MAAAC,EAAAC,OAAAyB,QAAAC,OAGApC,EAAAQ,MAAAb,SAAAC,cAAA,wBAAAY,MAlFAO,OAAAC,OAAAV,GAAAW,SAAA,KAGA,iBACAC,IAGA,MAAAuB,EAAAxC,EAAAO,MACAkC,EAAA/C,SAAAC,cAAA,kBAAA6C,OAEAC,EAAA7B,UAAAC,OAAA,+BACA4B,EAAA7B,UAAAa,IAAA,6BAGAgB,EAAAC,QAAAL,GAXA,IArBA,GCAA,WACA,MAAAM,EAAAjD,SAAAC,cAAA,aAEA,GAAAgD,EAAA,CACA,IAAAC,EAAA,GACAC,EAAA,GAEA,MAAAC,EAAApD,SAAAC,cAAA,qBACAoD,EAAArD,SAAAC,cAAA,uBAuCA,SAAAqD,EAAAC,EAAA,IACAL,EAAAK,EAAAtB,IAAAuB,IACA,CACAC,OAAA,GAAAD,EAAAC,OAAAC,UAAAF,EAAAG,SAAAD,SACAZ,GAAAU,EAAAV,MA+CA,SAAAc,EAAA9C,GACA,MAAA0C,EAAA1C,EAAAC,OAGA8C,EAAA7D,SAAAC,cAAA,4CAEA4D,GACAA,EAAA3C,UAAAC,OAAA,2CAGAqC,EAAAtC,UAAAa,IAAA,2CAEAsB,EAAAxC,MAAA2C,EAAAhB,QAAAsB,WAhFAtC,iBACA,MAEAE,QAAAC,MAFA,iBAKA2B,QAFA5B,EAAAmB,QAxBAkB,GAEAd,EAAA1C,iBAAA,SA4CA,SAAAO,GACA,MAAAH,EAAAG,EAAAC,OAAAF,MAEA,GAAAF,EAAAqD,OAAA,EAAA,CACA,MAAAC,EAAA,IAAAC,OAAAvD,EAAAwD,UAAA,OAAAC,QAAA,mBAAA,IAAA,KACAjB,EAAAD,EAAAX,OAAAiB,IACA,IAAA,GAAAA,EAAAC,OAAAU,UAAA,OAAAC,QAAA,mBAAA,IAAAC,cAAAC,OAAAL,GACA,OAAAT,SAIAL,EAAA,IAMA,WAEA,KAAAC,EAAAmB,YACAnB,EAAAoB,YAAApB,EAAAmB,YAGA,GAAApB,EAAAa,OAAA,EACAb,EAAA1C,QAAA+C,IACA,MAAAiB,EAAAzE,SAAA0E,cAAA,MACAD,EAAAvD,UAAAa,IAAA,6BACA0C,EAAAE,YAAAnB,EAAAC,OACAgB,EAAAjC,QAAAsB,UAAAN,EAAAV,GACA2B,EAAAzB,QAAAY,EAGAR,EAAAwB,YAAAH,SAEA,CACA,MAAAI,EAAA7E,SAAA0E,cAAA,KACAG,EAAA3D,UAAAa,IAAA,kCACA8C,EAAAF,YAAA,qCACAvB,EAAAwB,YAAAC,IAxBAC,MAxDAzB,EAAAxC,OACA,WACA,MAAA2C,QAuBAhC,eAAAsB,GACA,MAAArB,EAAA,mBAAAqB,EACAiC,QAAApD,MAAAF,GAGA,aAFAsD,EAAAlC,OA1BAmC,CAAA3B,EAAAxC,QACA4C,OAAAA,EAAAE,SAAAA,GAAAH,EAGAyB,EAAAjF,SAAA0E,cAAA,MACAO,EAAA/D,UAAAa,IAAA,4BAAA,2CACAkD,EAAAN,YAAA,GAAAlB,KAAAE,IAEAP,EAAAwB,YAAAK,IATA,IAfA,GCAA,WAEA,MAAAC,EAAAlF,SAAAC,cAAA,eAEA,GAAAiF,EAAA,CAEA,MAAAC,EAAAnF,SAAAC,cAAA,SACAmF,EAAApF,SAAAC,cAAA,iBAEA,IAAAoF,EAAA,GA2BA,SAAAC,IACAH,EAAAR,YAAA,GAEAU,EAAA5E,QAAA8E,IACA,MAAAC,EAAAxF,SAAA0E,cAAA,MACAc,EAAAtE,UAAAa,IAAA,mBACAyD,EAAAb,YAAAY,EACAC,EAAAC,WAAAC,EACAP,EAAAP,YAAAY,KAGAG,IAGA,SAAAD,EAAA5E,GACAA,EAAAC,OAAAI,SACAkE,EAAAA,EAAA9C,OAAAgD,GAAAA,IAAAzE,EAAAC,OAAA4D,aACAgB,IAGA,SAAAA,IACAP,EAAAvE,MAAAwE,EAAAO,WA7CA,KAAAR,IACAC,EAAAD,EAAAvE,MAAAgF,MAAA,KACAP,KAIAJ,EAAA3E,iBAAA,YAEA,SAAAO,GAEA,GAAA,KAAAA,EAAAgF,QAAA,CAEA,GAAA,KAAAhF,EAAAC,OAAAF,MAAA6C,QAAA5C,EAAAC,OAAAF,MAAA,EACA,OAGAC,EAAAiF,iBAEAV,EAAA,IAAAA,EAAAvE,EAAAC,OAAAF,MAAA6C,QACAwB,EAAArE,MAAA,GACAyE,SAhCA","file":"bundle.js","sourcesContent":["(function () {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if (horas) {\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => { dia.addEventListener('change', terminoBusqueda) });\r\n\r\n        let busqueda = {\r\n            categoria_id: +categoria.value || '', // con + lo pasamos a entero, y toma el valor si es que tiene\r\n            dia: +inputHiddenDia.value || ''\r\n        }\r\n\r\n        if (!Object.values(busqueda).includes('')) { // si encuentra en el objeto un valor vacio no continua la ejecucion del codigo\r\n\r\n            // todo este IIFE para que la funcion asincrona se llame correctamente\r\n            (async () => {\r\n                await buscarEventos();\r\n\r\n                // Resaltar la hora actual\r\n                const id = inputHiddenHora.value;\r\n                const horaSeleccionada = document.querySelector(`[data-hora-id=\"${id}\"]`);\r\n                \r\n                horaSeleccionada.classList.remove('horas__hora--desahabilitada');\r\n                horaSeleccionada.classList.add('horas__hora--seleccionada');\r\n\r\n                // para volver a seleccionar\r\n                horaSeleccionada.onclick = seleccionarHora;\r\n            })();\r\n\r\n        }\r\n\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas \r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n            if (Object.values(busqueda).includes('')) { // si encuentra en el objeto un valor vacio no continua la ejecucion del codigo\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n\r\n            // aplicar destruction para no usar obj.propiedad\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => { li.classList.add('horas__hora--desahabilitada') });\r\n\r\n            // Comprobar eventos con horas tomadas\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras); // pasar de NodeList a Array para posteriormente poder usar el filter que solo toma arrays\r\n\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId)); // negar para habilitar lso disponibles\r\n            resultado.forEach(li => { li.classList.remove('horas__hora--desahabilitada') });\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--desahbilitada');\r\n            horasDisponibles.forEach(hora => {\r\n                hora.addEventListener('click', seleccionarHora);\r\n            });\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Desabilitar la hora previa si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if (horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n            // Agregar clase de seleccionamiento\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            //llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if (ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes');\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]');\r\n\r\n        obtenerPonentes();\r\n\r\n        ponentesInput.addEventListener('input', buscarPonentes);\r\n\r\n        if(ponenteHidden.value) {\r\n            (async () => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value);\r\n                const {nombre, apellido} = ponente;\r\n\r\n                //Insertar en el HTML\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`;\r\n\r\n                listadoPonentes.appendChild(ponenteDOM);\r\n\r\n            })()\r\n        }\r\n\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n\r\n            const resultado = await fetch(url);\r\n            const ponentes = await resultado.json();\r\n\r\n            formatearPonentes(ponentes);\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            \r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map(ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                }\r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if (busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\"), \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if (ponente.nombre.normalize('NFD').replace(/[\\u0300-\\u036f]/g, \"\").toLowerCase().search(expresion) != -1) {\r\n                        return ponente\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = []\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while (listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente');\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id;\r\n                    ponenteHTML.onclick = seleccionarPonente;\r\n    \r\n                    // Añadir al DOM\r\n                    listadoPonentes.appendChild(ponenteHTML);\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P');\r\n                noResultados.classList.add('listado-ponentes__no-resultado');\r\n                noResultados.textContent = 'No hay resultados para tu busqueda';\r\n                listadoPonentes.appendChild(noResultados);\r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado');\r\n            \r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado');\r\n            }\r\n\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado');\r\n        \r\n            ponenteHidden.value = ponente.dataset.ponenteId;\r\n        }\r\n    }\r\n})();","(function() {\r\n\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar el input oculto\r\n        if(tagsInputHidden !== '') {\r\n            tags = tagsInputHidden.value.split(','); // de string a array\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag);\r\n        \r\n        function guardarTag(e) {\r\n            \r\n            if(e.keyCode === 44) {\r\n\r\n                if(e.target.value.trim() === '' || e.target.value < 1) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                \r\n                tags = [...tags, e.target.value.trim()]; // copia de arreglo y agregando uno nuevo\r\n                tagsInput.value = '';\r\n                mostrarTags();                \r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            });\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) { // a que le presionamos\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent); // elimina al que se le dio el click\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString(); // rellenamos el valor del value como strings dentro del \"\"\r\n        }\r\n    }\r\n})()"]}